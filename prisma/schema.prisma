// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MEMBER
}

enum RequestStatus {
  PENDING
  APPROVED
  REJECTED
  RETURNED
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  image     String?
  role      Role      @default(MEMBER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  requests  Request[]
  Cart      Cart[]
}

model Request {
  id              Int           @id @default(autoincrement())
  status          RequestStatus @default(PENDING)
  reason          String
  requestDate     DateTime
  rejectionReason String?
  userId          Int
  user            User          @relation(fields: [userId], references: [id])
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  @@unique([userId, requestDate])
}

model Product {
  id            Int      @id @default(autoincrement())
  name          String
  slug          String   @unique
  image         String
  description   String
  totalAmount   Int
  currentAmount Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  Cart          Cart[]
}

model Cart {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, productId])
}
